@baseUrl = http://localhost:5250

### Test 1: Get Hello World
GET {{baseUrl}}/
Accept: application/json

### Test 2: Create a new user
POST {{baseUrl}}/api/users
Content-Type: application/json

{
    "name": "John Doe",
    "email": "john.doe@example.com"
}

### Test 3: Create another user
POST {{baseUrl}}/api/users
Content-Type: application/json

{
    "name": "Jane Smith",
    "email": "jane.smith@example.com"
}

### Test 4: Get all users
GET {{baseUrl}}/api/users
Accept: application/json

### Test 5: Get a specific user
# Replace the ID below with an actual ID returned from the create user response
GET {{baseUrl}}/api/users/00000000-0000-0000-0000-000000000000
Accept: application/json

### Test 6: Update a user
# Replace the ID below with an actual ID returned from the create user response
PUT {{baseUrl}}/api/users/00000000-0000-0000-0000-000000000000
Content-Type: application/json

{
    "name": "John Doe Updated",
    "email": "john.updated@example.com"
}

### Test 7: Get the updated user to verify changes
# Use the same ID as in the PUT request
GET {{baseUrl}}/api/users/00000000-0000-0000-0000-000000000000
Accept: application/json

### Test 8: Delete a user
# Replace the ID below with an actual ID returned from the create user response
DELETE {{baseUrl}}/api/users/00000000-0000-0000-0000-000000000000

### Test 9: Try to get the deleted user (should return 404 Not Found)
# Use the same ID as in the DELETE request
GET {{baseUrl}}/api/users/00000000-0000-0000-0000-000000000000
Accept: application/json

### Test 10: Try to update a non-existent user (should return 404 Not Found)
PUT {{baseUrl}}/api/users/11111111-1111-1111-1111-111111111111
Content-Type: application/json

{
    "name": "Non Existent",
    "email": "non.existent@example.com"
}

### Test 11: Try to delete a non-existent user (should return 404 Not Found)
DELETE {{baseUrl}}/api/users/11111111-1111-1111-1111-111111111111